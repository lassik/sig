(define magic (bytevector #xdc #xdc #x00 #x0d #x0a))

(define (sig-read)
  (let ((mg (read-bytevector (bytevector-length magic))))
    (unless (equal? mg magic) (error "Bad magic"))
    (let ((n (read-u8)))
      (when (or (eof-object? n) (> n 127))
        (error "Bad format-name length"))
      (let ((bytes (read-bytevector n)))
        (when (or (eof-object? bytes)
                  (not (= n (bytevector-length bytes))))
          (error "Short format-name"))
        (utf8->string bytes)))))

(define (sig-write format-name)
  (let ((bytes (string->utf8 format-name)))
    (write-bytevector magic)
    (write-u8 (bytevector-length bytes))
    (write-bytevector bytes)
    format-name))
